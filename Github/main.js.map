{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/user-class/repo.ts","webpack:///./src/app/user-class/user.ts","webpack:///./src/app/user-directive/direct.directive.ts","webpack:///./src/app/user-pipe/pipe.pipe.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-user></app-user>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { UserComponent } from './user/user.component';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {UserService} from './user.service';\nimport { DirectDirective } from './user-directive/direct.directive';\nimport { PipePipe } from './user-pipe/pipe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    UserComponent,\n    DirectDirective,\n    PipePipe\n  ],\n  imports: [\n    BrowserModule,\n      FormsModule,\n      HttpClientModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"input{\\n    padding-right: 556px;\\n}\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Repo {\n     constructor (public name: string, public repo_url: string, public description: string){}\n}\n\n","export class User {\n    constructor(public login: string,public avatar_url:string,public followers:string,public following:string,\n                public public_repos:string){}\n}\n\n\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appDirect]'\n})\nexport class DirectDirective {\n\n  constructor() { }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pipe'\n})\nexport class PipePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport {User} from './user-class/user';\nimport {Repo} from './user-class/repo';\n\n\n\n@Injectable({\n\n  providedIn: 'root'\n})\nexport class UserService {\n\n    user: User;\n     repo: Repo;\n     newRepo: any;\n    private userName: string;\n\n\n  constructor(private http: HttpClient) {\n        this.user = new User('', '', '', '', '');\n        this.repo = new Repo('', '', '');\n        console.log('Service Works!');\n        this.userName = 'Sigilai5';\n\n\n  }\n\n  getUserInfo() {\n\n      interface ApiResponse {\n          login: string;\n          avatar_url: string;\n          followers: string;\n          following: string;\n          public_repos: string;\n\n\n      }\n\n      const promise = new Promise(((resolve, reject) => {\n       this.http.get<ApiResponse>('https://api.github.com/users/' + this.userName + '?access_token=' + environment.apiUrl).toPromise().then(response => {\n\n           // this.user.user=response.user\n           //\n               this.user.login = response.login;\n               this.user.avatar_url = response.avatar_url;\n               this.user.followers = response.followers;\n               this.user.following = response.following;\n               this.user.public_repos = response.public_repos;\n\n\n           resolve();\n\n       },\n\n           error => {\n\n\n               reject(error);\n           }\n       );\n      }));\n\n      return promise;\n\n  }\n\n    getRepoInfo(username) {\n\n         interface ApiResponse {\n             name: string;\n            repo_url: string;\n             description: string;\n\n         }\n\n        const promise = new Promise(((resolve, reject) => {\n            this.http.get<ApiResponse>('https://api.github.com/users/' + this.userName + '/repos?access_token=' + environment.apiUrl).toPromise().then(response_repo => {\n\n                    this.newRepo = response_repo;\n                    console.log(this.newRepo);\n\n                    // this.repo.name = response_repo.name\n                    //     this.repo.repo_url = response_repo.repo_url\n                    //     this.repo.description = response_repo.description\n\n\n                    resolve();\n\n                },\n                error => {\n                    reject(error);\n                }\n            );\n        }));\n\n        return promise;\n\n    }\n\n    updateProfile(userName: string) {\n      this.userName = userName;\n\n    }\n\n}\n","module.exports = \".jumbotron{\\n    text-align: center;\\n    font-size: 34px;\\n    background-color: black;\\n    color: white;\\n}\\nimg{\\n    width: 100px;\\n    height: 100px;\\n    border-radius: 50%;\\n}\\nform{\\n    padding-left: 100px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\"><img src=\\\"../../assets/github.png\\\">Github Search </div>\\n\\n    <form (keyup)=\\\"findProfile()\\\" #userForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Search Github User\\\" [(ngModel)]=\\\"userName\\\" name=\\\"userName\\\" style=\\\"padding-right: 590px\\\">\\n        </div>\\n        <!--<button type=\\\"Submit\\\" class=\\\"btn btn-success btn-lg\\\">Search User</button>-->\\n    </form>\\n\\n\\n    <div class=\\\"row\\\">\\n           <div *ngIf=\\\"user\\\">\\n        <div class=\\\"col-md-3\\\">\\n            <h1>User</h1>\\n            <img src=\\\"{{user.avatar_url}}\\\" width=\\\"400px\\\" height=\\\"400px\\\"><br>\\n            Profile Name:<h4>{{user.login}}</h4>\\n        </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <h1>Profile</h1>\\n            <button class=\\\"btn btn-primary\\\">{{user.followers}} Followers</button>\\n            <button class=\\\"btn btn-warning\\\">{{user.following}} Following</button>\\n            <button class=\\\"btn btn-danger\\\">{{user.public_repos}} Repositories</button>\\n        </div>\\n\\n\\n    <div class=\\\"col-md-3\\\">\\n        <div *ngIf=\\\"userService.newRepo\\\">\\n        <h1>Repositories</h1>\\n\\n            <div *ngFor='let repository of userService.newRepo'>\\n\\n                <a href=\\\"{{repository.html_url}}\\\" target=\\\"_blank\\\" >{{repository.name}}</a>\\n\\n            </div>\\n\\n\\n\\n\\n        </div>\\n        <!--<div *ngFor=\\\"let repo of this.userS\\\">-->\\n            <!--<h1>{{repo.repo_url}}</h1>-->\\n            <!--<h3>{{repo.description}}</h3>-->\\n\\n        <!--</div>-->\\n\\n\\n    </div>\\n\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../user.service';\nimport {User} from '../user-class/user';\nimport {Repo} from '../user-class/repo';\nimport {getResponseURL} from '@angular/http/src/http_utils';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n    providers: [UserService]\n})\nexport class UserComponent implements OnInit {\n\n  user: User;\n  repos: Repo;\n  reporesults: any;\n\n  userName: string;\n\n  constructor(private userService: UserService) {}\n\n  findProfile() {\n      this.userService.updateProfile(this.userName);\n\n      this.userService.getUserInfo();\n      this.user = this.userService.user;\n\n      this.userService.getRepoInfo(this.userName)\n      this.reporesults = this.userService.newRepo;\n\n\n      }\n\n\n\n  ngOnInit() {\n\n      this.userService.getRepoInfo(this.userName)\n      this.repos = this.userService.repo;\n      console.log(this.userService.repo.name);\n\n\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    apiUrl: '7447a057bbac52bd344b7f55d05e33bb2f2b9c0c'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}